1565723769a:1:{s:15:"annue_achat.htm";a:9:{s:8:"fileName";s:15:"annue_achat.htm";s:7:"content";s:1806:"title = "annue_achat"
url = "/annue_achat"
layout = "annule_achat"
is_hidden = 0
==
<?
use payment\Payment\Models\PaydunyaConfig;
use event\event\models\AnnulleAchat;
function onStart(){
$this['demandes']= Db::table('event_event_annule_achat1')
->join('event_event_', function ($join) {
    $join->on('event_event_annule_achat1.event_id', '=', 'event_event_.id')
        ->where('event_event_.user_id', '=', Auth::getUser()->id)
        ->select('event_event_annule_achat1.event_id','event_event_annule_achat1.user_send_id','event_event_annule_achat.montant');
})
->get();
}

function onRembourse(){
    $checkoutInvoice = new \Paydunya\Checkout\CheckoutInvoice();
    $config = PaydunyaConfig::get()[0];
    \Paydunya\Setup::setMasterKey($config->master_key);
    \Paydunya\Setup::setPublicKey($config->public_key_test);
    \Paydunya\Setup::setPrivateKey($config->private_key_test);
    \Paydunya\Setup::setMode("test");
    \Paydunya\Setup::setToken($config->token_test);
    \Paydunya\Checkout\Store::setName("Paydunya - Event");
    \Paydunya\Checkout\Store::setTagline("Achetez des tickets de tous vos évenements favoris.");
    \Paydunya\Checkout\Store::setPhoneNumber($config->phone);
    $checkoutInvoice->setTotalAmount(Input::get('montant'));
    $checkoutInvoice->setReturnUrl("http://localhost/install-master1/retour_rembour");
    $checkoutInvoice->addCustomData("event",Input::get('event'));
    $checkoutInvoice->addCustomData("user",Input::get('usersender'));
    if($checkoutInvoice->create()) 
    {
      return Redirect::to($checkoutInvoice->getInvoiceUrl());
    }
    else
    {
      echo $checkoutInvoice->response_text;
    }
    //echo($config->master_key);
    //echo(input('nbTicket'));
  
}
?>
==


{%partial 'achat/demande'%}";s:5:"mtime";i:1565279138;s:6:"markup";s:27:"{%partial 'achat/demande'%}";s:4:"code";s:1672:"use payment\Payment\Models\PaydunyaConfig;
use event\event\models\AnnulleAchat;
function onStart(){
$this['demandes']= Db::table('event_event_annule_achat1')
->join('event_event_', function ($join) {
    $join->on('event_event_annule_achat1.event_id', '=', 'event_event_.id')
        ->where('event_event_.user_id', '=', Auth::getUser()->id)
        ->select('event_event_annule_achat1.event_id','event_event_annule_achat1.user_send_id','event_event_annule_achat.montant');
})
->get();
}

function onRembourse(){
    $checkoutInvoice = new \Paydunya\Checkout\CheckoutInvoice();
    $config = PaydunyaConfig::get()[0];
    \Paydunya\Setup::setMasterKey($config->master_key);
    \Paydunya\Setup::setPublicKey($config->public_key_test);
    \Paydunya\Setup::setPrivateKey($config->private_key_test);
    \Paydunya\Setup::setMode("test");
    \Paydunya\Setup::setToken($config->token_test);
    \Paydunya\Checkout\Store::setName("Paydunya - Event");
    \Paydunya\Checkout\Store::setTagline("Achetez des tickets de tous vos évenements favoris.");
    \Paydunya\Checkout\Store::setPhoneNumber($config->phone);
    $checkoutInvoice->setTotalAmount(Input::get('montant'));
    $checkoutInvoice->setReturnUrl("http://localhost/install-master1/retour_rembour");
    $checkoutInvoice->addCustomData("event",Input::get('event'));
    $checkoutInvoice->addCustomData("user",Input::get('usersender'));
    if($checkoutInvoice->create()) 
    {
      return Redirect::to($checkoutInvoice->getInvoiceUrl());
    }
    else
    {
      echo $checkoutInvoice->response_text;
    }
    //echo($config->master_key);
    //echo(input('nbTicket'));
  
}";s:5:"title";s:11:"annue_achat";s:3:"url";s:12:"/annue_achat";s:6:"layout";s:12:"annule_achat";s:9:"is_hidden";s:1:"0";}}